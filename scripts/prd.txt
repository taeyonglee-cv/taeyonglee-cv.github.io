<context>
# Overview
This project is a multilingual, scroll-based personal homepage for a scholar and developer (Taeyong Lee). It showcases academic achievements, projects, and professional background in a visually clean and structured format. The homepage is intended for collaborators, recruiters, and fellow researchers. Its primary value is clarity, multilingual access, and automation of scholarly updates.

# Core Features
- **Personal Info Display**
  - What: Display name, photo, short bio, CV, and social links (GitHub, LinkedIn, Google Scholar, Instagram).
  - Why: To allow visitors to quickly understand the user's profile.
  - How: All elements shown at the top section of the homepage.

- **Multilingual Support**
  - What: Full Korean, English, and French translations.
  - Why: To accommodate international audiences.
  - How: Language is auto-detected via browser settings and switchable via a toggle. Note: Publication titles and project titles must be excluded from translation.

- **Publication Section**
  - What: A sortable table showing all publications.
  - Why: To help users explore research works efficiently.
  - How: Fetched via Google Scholar crawling once daily and cached. Each row shows: date, thumbnail, title (linked to journal), journal name, citation count, and a collapsible abstract auto-generated by LLM.

- **Responsive Design**
  - What: Adjust layout based on device.
  - Why: Ensure usability on both desktop and mobile.
  - How: On mobile, publication list is simplified into cards showing thumbnail and title only, with a manual sort option.

- **Project Section**
  - What: Shows selected projects with metadata.
  - Why: Demonstrates technical range and research applications.
  - How: Managed via structured JSON or Markdown files.

- **Visitor Count Tracking**
  - What: Track homepage views.
  - Why: For analytics.
  - How: Use a lightweight tracking tool to display cumulative visitor count.

# User Experience
- One-page scrolling layout.
- Language toggle and auto-detection.
- Publications and projects structured as interactive, visually separated sections.
- Mobile UI presents simplified content blocks (e.g., profile + project/publication cards).
</context>

<PRD>
# Technical Architecture
- Static site using GitHub Pages
- i18n setup via JSON-based translation keys
  - Title fields in publications and projects are excluded from translation
- Scholar data fetched daily via headless crawling tool (e.g., SerpAPI or Puppeteer + cache)
- LLM used for:
  - Publication abstract summarization (multilingual)
  - (Optional/future) Selecting or generating representative images per publication
- Projects and publications managed via Markdown or JSON
- Mobile optimization using CSS breakpoints and content reshaping
- SEO support via meta tags, Open Graph, and schema.org markup

# Development Roadmap
## MVP
- Scroll-based site layout
- Name, photo, bio, social links
- i18n infrastructure and translations (KO/EN/FR)
- CV file downloadable via link
- Publication table (with date, title, journal, citation, collapsible abstract)
- Project section from local JSON/Markdown
- Mobile view adaptation
- Visitor counter

## Future Enhancements
- Automated publication image generation (LLM-based)
- Web-based editor for managing projects
- Page performance tuning
- Dark mode toggle
- Project filter by tag or category
- Analytics dashboard

# Logical Dependency Chain
1. Set up multilingual framework and translation system
2. Implement static site structure with top section (name/photo/bio)
3. Create publication table with sorting, citation, and LLM summary
4. Build project section from structured files
5. Optimize for mobile
6. Add visitor tracking
7. Optional LLM-based publication image generation

# Risks and Mitigations
- Google Scholar has no API
  - Mitigation: Use crawler with caching; daily update only
- LLM abstract generation may produce inaccurate summaries
  - Mitigation: Add review/edit option or use prompt tuning
- Translation inconsistency
  - Mitigation: Enforce key structure and fallback language
- SEO may be weak for single-page
  - Mitigation: Use structured meta and JSON-LD tags

# Appendix
- Example publication JSON schema:
```json
{
  "date": "2024-03-01",
  "title": "Optimized Control of Menstrual Cycle Hormones",
  "journal": "Journal of Mathematical Biology",
  "link": "https://journal-link.com",
  "citations": 25,
  "summary": {
    "en": "This paper presents...",
    "ko": "이 논문은...",
    "fr": "Cet article présente..."
  },
  "thumbnail": "path_or_url_to_image"
}
